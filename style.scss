@charset "utf-8";
/***
    The new CSS reset - version 1.8.5 (last updated 14.6.2023)
    GitHub page: https://github.com/elad2412/the-new-css-reset
***/

/*
    Remove all the styles of the "User-Agent-Stylesheet", except for the 'display' property
    - The "symbol *" part is to solve Firefox SVG sprite bug
    - The "html" attribute is exclud, because otherwise a bug in Chrome breaks the CSS hyphens property (https://github.com/elad2412/the-new-css-reset/issues/36)
 */
*:where(
    :not(html, iframe, canvas, img, svg, video, audio):not(svg *, symbol *)
  ) {
  all: unset;
  display: revert;
}

/* Preferred box-sizing value */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Reapply the pointer cursor for anchor tags */
a,
button {
  cursor: revert;
}

/* Remove list styles (bullets/numbers) */
ol,
ul,
menu {
  list-style: none;
}

/* For images to not be able to exceed their container */
img {
  max-inline-size: 100%;
  max-block-size: 100%;
}

/* removes spacing between cells in tables */
table {
  border-collapse: collapse;
}

/* Safari - solving issue when using user-select:none on the <body> text input doesn't working */
input,
textarea {
  -webkit-user-select: auto;
}

/* revert the 'white-space' property for textarea elements on Safari */
textarea {
  white-space: revert;
}

/* minimum style to allow to style meter element */
meter {
  -webkit-appearance: revert;
  appearance: revert;
}

/* preformatted text - use only for this feature */
:where(pre) {
  all: revert;
}

/* reset default text opacity of input placeholder */
::placeholder {
  color: unset;
}

/* remove default dot (â€¢) sign */
::marker {
  content: initial;
}

/* fix the feature of 'hidden' attribute.
   display:revert; revert to element instead of attribute */
:where([hidden]) {
  display: none;
}

/* revert for bug in Chromium browsers
   - fix for the content editable attribute will work properly.
   - webkit-user-select: auto; added for Safari in case of using user-select:none on wrapper element */
:where([contenteditable]:not([contenteditable="false"])) {
  -moz-user-modify: read-write;
  -webkit-user-modify: read-write;
  overflow-wrap: break-word;
  -webkit-line-break: after-white-space;
  -webkit-user-select: auto;
}

/* apply back the draggable feature - exist only in Chromium and Safari */
:where([draggable="true"]) {
  -webkit-user-drag: element;
}

/* Revert Modal native behavior */
:where(dialog:modal) {
  all: revert;
}

:root {
  font-family: Noto Sans;
  --color-primary: #fd1669;
}

html,
body {
  height: 100%;
  width: 100%;
}

body {

  display: flex;
  flex-flow: column nowrap;
  place-content: center;
  place-items: center;
  background-image: url("./assets/block.svg");
  background-repeat: no-repeat;
  background-position: center top;

  > div {
    display: flex;
    flex-direction: column;
    align-items: center;
    row-gap: 2rem;
    padding: 17px;
    max-width: 441.89px;
    background: #ffffff;
    border: 1px solid #f2edf2;
    box-shadow: 0px 4px 69.7px rgba(255, 214, 247, 0.65);
    border-radius: 25px;

    > div {
      display: flex;
      flex-direction: column;
      align-items: flex-start;
      row-gap: 0.1rem;
      width: 100%;
    }
  }
  > a {
    position: fixed;
    bottom: 1rem;
    text-transform: uppercase;
    font-size: 0.8rem;
    color: var(--color-primary);
  }
}

textarea {
  width: 100%;
  height: 116px;
  background: linear-gradient(0deg, #f9f9fd, #f9f9fd), #f9f9fd;
  border-radius: 11.3698px;
  padding: 1rem;
  font-size: 25px;
  &::placeholder {
    opacity: 0.3;
  }
}

button {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  padding: 5.68489px;
  gap: 14.21px;
  width: 100%;
  height: 52.59px;
  background: rgba(255, 185, 248, 0.6);
  border-radius: 15.6335px;
  flex: none;
  order: 3;
  flex-grow: 0;
  transition: background-color 250ms cubic-bezier(0.46, 0.03, 0.52, 0.96);
  cursor: pointer;
  &:hover {
    background: rgb(255, 185, 248);
  }
}
